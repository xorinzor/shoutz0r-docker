version: '3'
services:
  player-shoutzor:
    image: savonet/liquidsoap-full
    entrypoint: ["liquidsoap", "/home/liquidsoap/shoutzor.liq"]
    depends_on:
      - player-wrapper
      - nginx
    networks:
      - backend
    volumes:
      - ./player:/home/liquidsoap
    deploy:
      restart_policy:
        condition: on-failure

  player-wrapper:
    image: savonet/liquidsoap-full
    entrypoint: ["liquidsoap", "/home/liquidsoap/wrapper.liq"]
    depends_on:
      - icecast
    networks:
      - backend
    volumes:
      - ./player:/home/liquidsoap
    deploy:
      restart_policy:
        condition: on-failure

  icecast:
    image: infiniteproject/icecast
    ports:
      - '8000:8000'
    networks:
      - frontend
      - backend
    environment:
      - ICECAST_SOURCE_PASSWORD=changeme
      - ICECAST_RELAY_PASSWORD=changeme
      - ICECAST_ADMIN_PASSWORD=changeme
      - ICECAST_ADMIN_USERNAME=admin
      - ICECAST_ADMIN_EMAIL=noreply@example.org
      - ICECAST_LOCATION=the internet
      - ICECAST_HOSTNAME=shoutzor.lan
      - ICECAST_MAX_CLIENTS=9001
      - ICECAST_MAX_SOURCES=100
    deploy:
      restart_policy:
        condition: on-failure

  nginx:
    image: nginx
    depends_on:
      - 'php'
    ports:
      - '80:80'
    networks:
      - frontend
      - backend
    volumes:
      - ./www:/usr/share/nginx/html:ro
    environment:
      - NGINX_HOST=shoutzor.lan
      - NGINX_PORT=80
    deploy:
      restart_policy:
        condition: on-failure

  php:
    image: php
    entrypoint: ["php-fpm"]
    depends_on:
      - 'mysql'
    networks:
      - backend
      - db
    volumes:
      - ./www:/usr/src/myapp
    deploy:
      restart_policy:
        condition: on-failure

  mysql:
    image: mysql/mysql-server
    networks:
      - db
    volumes:
      - db-data:/var/lib/mysql
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=false
      - MYSQL_ROOT_PASSWORD=changeme
      - MYSQL_DATABASE=shoutzor
    deploy:
      restart_policy:
        condition: on-failure

networks:
  frontend:
  backend:
  db:

volumes:
  db-data: